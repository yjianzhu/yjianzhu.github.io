<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on yjianzhu&#39;s page</title>
    <link>http://yjianzhu.github.io/post/</link>
    <description>Recent content in Posts on yjianzhu&#39;s page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Apr 2023 21:00:16 +0800</lastBuildDate><atom:link href="http://yjianzhu.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rumour中文互联网谣言集锦第一期</title>
      <link>http://yjianzhu.github.io/p/rumour%E4%B8%AD%E6%96%87%E4%BA%92%E8%81%94%E7%BD%91%E8%B0%A3%E8%A8%80%E9%9B%86%E9%94%A6%E7%AC%AC%E4%B8%80%E6%9C%9F/</link>
      <pubDate>Tue, 25 Apr 2023 21:00:16 +0800</pubDate>
      
      <guid>http://yjianzhu.github.io/p/rumour%E4%B8%AD%E6%96%87%E4%BA%92%E8%81%94%E7%BD%91%E8%B0%A3%E8%A8%80%E9%9B%86%E9%94%A6%E7%AC%AC%E4%B8%80%E6%9C%9F/</guid>
      <description>起因是看到有人传播这样一张图 谣言截图1对于在中文互联网摸爬滚打多年，见证这三四年民族主义高潮的我来说，顿时就感觉不太对劲。
首先，瑞士作为一个民主议会国家，怎么可能说宣布放弃中立国就放弃，不需要经过议会投票吗？再者，这么大的新闻，我怎么三周前啥新闻也没看到。
为了一探究竟，动用我之前一贯的方法，搜索引擎搜相关新闻即可。一是查看是否真有其事，二是查看这种言论的源头，毕竟中文互联网都是复制粘贴。
谣言谷歌搜索1先用中文搜一下，果然都是一样的复制粘贴大法，都是互联网自媒体的低质量稿件，没有一个新闻媒体报道。
谣言谷歌搜索2限定时间范围，修改关键词。来源不可考，一位新浪网ID“叶檀财经”的用户和知乎用户“远方青木”的用户同一天发布了同样内容的文章。我从小看央视财经的节目，对叶檀女士还是很尊重的，这肯定是蹭id的无良自媒体号。我同时看了下知乎用户“远方青木”的信息，700万赞，66万+关注者，恐怖如斯。
英文搜索英文搜索2咋换了英文啥也搜不到，那就看看wikipedia吧。
wikipedia of Swiss neutrality搜索近一个月瑞士关于中立和制裁的新闻，大致得到这样的时间线。2022年瑞士加入对俄制裁，但是绕过了很多法律，并没有在事实上放弃中立，比较中立是瑞士的宪法范围内，当然外界可以指责其为虚假中立，详情可见瑞士外交部官网。所以并不存在瑞士放弃中立国的说法，那就更没有所谓的“3月23日瑞士宣布再次恢复永久中立国身份”这样的无稽之谈。
那就要探究下，这些“小编”为什么会编出这样的谣言。背景是瑞银危机下，自媒体编造类似的瑞士谣言流量不会少。瑞士的中立地位，不仅受到偏向俄罗斯一方的吐槽，也受到欧美的不满，欧美媒体造势想让瑞士加大对俄制裁，同时瑞士内部的军火商也想绕过相关法律获得对乌克兰的武器出口。瑞士捍卫中立这样的言论就会被这些自媒体解读成重新恢复中立。类似的报道还有这一篇。但是3月29日，瑞士通过了对俄罗斯第十轮制裁的法案，也就是“小编”口中的所谓“再次宣布放弃中立”。
写到这里，问题水落石出了。瑞士的中立是符合国际法的中立的，也是瑞士宪法规定的。如果瑞士要宣布放弃中立国，必须先修改宪法。但是我还想多讲两句关于谣言信息污染的话题
我的一贯观点是，不要小看互联网时代特别是移动互联网时代的自媒体的力量。他们在中文互联网制造谣言的罪行可谓是罄竹难书。大多数时候这样的谣言利用的是群众们朴素的感情，因此很容易站在道德高地，也因此很少有人或者权威号去辟谣。一方面尺度把握不好就惹得一身骚，被扣帽子都是小事；另一方面也是无利可图，群众不爱看这样的文章。谣言利用情绪传播的非常快，辟谣通常毫无影响力。
这样的谣言多数是智商鉴定器，因为实在太假，通常没有引用新闻来源，内容也是往离谱和反直觉写。
new bing 中文问答new bing 英文问答最后最后，我还想说这样的谣言对中文互联网环境的影响，以及中文预料训练LLM AI的影响。我问了new bing 上述的问题，无论是中文还是英文对话，new bing 都给我输出了同样错误的谣言，引用源就是同样的自媒体文章。</description>
    </item>
    
    <item>
      <title>Github</title>
      <link>http://yjianzhu.github.io/p/github/</link>
      <pubDate>Sun, 16 Apr 2023 23:06:38 +0800</pubDate>
      
      <guid>http://yjianzhu.github.io/p/github/</guid>
      <description>USTC 资源 转眼毕业都快四年了，还是觉得ustc对我很好，毕业后的edu邮箱可以一直用，可以用ustc的认证访问文献网站，可以用ustc webvpn。
ustc 资源github这个系统整理了ustc的资源
这两天收到邮寄，毕业生转校友，email 容量降低到1g，附带的网盘关闭，ftp和个人网页关闭，这也是我从home.ustc.edu.cn/~yjianzhu 转到这里的原因。</description>
    </item>
    
    <item>
      <title>Tea_stain</title>
      <link>http://yjianzhu.github.io/p/tea_stain/</link>
      <pubDate>Fri, 04 Mar 2022 15:52:53 +0800</pubDate>
      
      <guid>http://yjianzhu.github.io/p/tea_stain/</guid>
      <description>茶垢清洁 起因是师弟买了个茶垢清洁剂，颗粒状，白色，热水浸泡后，有气泡，半小时后茶垢漂浮于水面。
于搜索引擎和知乎搜索一番，发现碳酸钠，碳酸氢钠以及过碳酸钠对茶垢都有很好的清洁作用。
转至万方，谷歌学术搜索。于万方搜索到一篇毕业论文，给出了详细的科学研究过程，也发现一堆无用的发明专利，似乎随便改改参数，就能申请专利。
在谷歌学术搜索&amp;quot;tea scale&amp;quot;，是会指向一种茶叶的害虫。(scale 有水垢的意思。)
换为搜索&amp;quot;tea grime&amp;quot; 依旧没有结果，最终发现还是&amp;quot;tea stain&amp;quot;能找到我的目标。这波是百度翻译背锅，不都说百度翻译比谷歌翻译好用吗？
另外在知乎发现一个更有趣的。指鹿为马之指纯碱为小苏打 zhihu1zhihu2茶垢成分以及清洁原理 言归正传，乾云菲. 茶垢形成机理研究[D]. 江苏:南京农业大学,2015. 这篇文献做了系统的研究，指出茶垢主要成分是茶多酚和金属离子形成的沉淀物。
结合 茶多酚和酚类 的性质，酚类具有酸性，可以在碱性溶液中形成盐，由于羟基连接的碳原子存在不饱和键，故存在还原性(因此常说喝茶可以抗氧化)。
综上，碱性的可食用的纯碱，小苏打用于去除茶垢，即因为二者溶液的碱性。优点是可食用，无害，安全。而过氧碳酸钠，可能存在氧化和漂白，发生的复杂反应会带来其他物质，清洁完要注意去除残留。
小苏打的碱性还可以用于清洁油脂。
本站总访问量次</description>
    </item>
    
    <item>
      <title>Valentine&#39;s Day</title>
      <link>http://yjianzhu.github.io/p/valentines-day/</link>
      <pubDate>Sun, 13 Feb 2022 15:34:05 +0800</pubDate>
      
      <guid>http://yjianzhu.github.io/p/valentines-day/</guid>
      <description>回首 我很喜欢《再回首》这首歌，我享受在大脑中给过往的记忆绘色的过程。
转眼也认识你6年有余了，对没有更好认识你感到自责。无论是当初刚认识你，还是现在重新认识你，我都时刻感受到你的可爱，温柔。
我依稀记得，你有第一段恋情的时候，你分享过。当时的我，内心是祝福的，我觉得你这么优秀的人，一定可以有一段精彩的人生。
如今，我是带着嫉妒回看这段往事。懊悔你的过去没有我的身影。
告白 人性的美好和缺陷，人生过去的二十余载，我想我已经懂了大概。我害怕通过这虚拟的网络，你只认识到我想呈现给你的美好一面。
完整的我，一样有着这样那样的缺点。我想美好的事物，是相互吸引的，我们可以相互鼓励，共同改善。
经历过的人，都知道人生来喜新厌旧，新鲜感是感情中最重要的，也是最难得的。喜欢是百看不厌，爱才是久处生鲜。
珍惜当下，就算失去新鲜感，我也会用这段甜美的回忆滋润余生。
人生而孤独，短短一生，已过去两轮。
陪伴，是最长情的告白。愿余生不负卿。
结语 这么多天来，我脑中时长有一些句子划过————“为人性僻耽佳句，语不惊人死不休”。奈何文笔时常词不达意，不知所云。
值此双节聚汇之际，整理我所爱的元宵节诗句。
青玉案 元夕 东风夜放花千树，更吹落、星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。
蛾儿雪柳黄金缕，笑语盈盈暗香去。众里寻他千百度，蓦然回首，那人却在，灯火阑珊处。
生查子 元夕 去年元夜时，花市灯如昼。
月上柳梢头，人约黄昏后。
今年元夜时，月与灯依旧。
不见去年人，泪湿春衫袖。
鹧鸪天 健康上元作 客路那知岁序移，忽惊春到小桃枝。天涯海角悲凉地，记得当年全盛时。
花弄影，月流辉，水晶宫殿五云飞。分明一觉华胥梦，回首东风泪满衣。
曹公在《石头记》中前后两次描绘了龙盘凤舞的元夕之景，足见古人很重视这个节日。元妃省亲，猜灯谜，这些场景依旧值得细细品味。</description>
    </item>
    
    <item>
      <title>Slurm</title>
      <link>http://yjianzhu.github.io/p/slurm/</link>
      <pubDate>Tue, 28 Dec 2021 15:32:22 +0800</pubDate>
      
      <guid>http://yjianzhu.github.io/p/slurm/</guid>
      <description>need to be sloved 守护进程slurmctld 从systemctl 启动一直timeout，只能手动启动 尝试用init.d 启动
Slurm 简介 Slurm是一个开源，容错，高度可扩展的集群管理和作业调度系统，适用于大型和小型Linux集群。Slurm不需要对其操作进行内核修改，并且相对独立。作为集群工作负载管理器，Slurm有三个关键功能。首先，它在一段时间内为用户分配对资源（计算节点）的独占和/或非独占访问，以便他们可以执行工作。其次，它提供了一个框架，用于在分配的节点集上启动，执行和监视工作（通常是并行作业）。最后，它通过管理待处理工作的队列来仲裁资源争用。
架构 如图1所示，Slurm包含在每个计算节点上运行的slurmd守护程序和在管理节点上运行的中央slurmctld守护程序（带有可选的故障转移双胞胎）。该slurmd守护程序提供容错层次通信。用户命令包括：sacct，salloc，sattach，sbatch，sbcast，scancel，scontrol， sinfo，SMAP，SQUEUE，SRUN，strigger 和sview。所有命令都可以在群集中的任何位置运行。
安装 slurm introduction
sudo apt install munge sudo apt install slurm-wlm 在节点上配置启动munge Install MUNGE for authentication. Make sure that all nodes in your cluster have the same munge.key. Make sure the MUNGE daemon, munged, is started before you start the Slurm daemons.
在主节点运行create-munge-key,再 systemctl enable munge 打开munge.拷贝/etc/munge/munge.key 到各个计算节点。
munge -n munge -n | unmunge munge -n | ssh cityu14 unmunge 配置slurm 确保所有节点有同一个用户名，且他们的uid和gid都是统一的。</description>
    </item>
    
    <item>
      <title>NFS remote mount</title>
      <link>http://yjianzhu.github.io/p/nfs-remote-mount/</link>
      <pubDate>Mon, 01 Nov 2021 15:34:05 +0800</pubDate>
      
      <guid>http://yjianzhu.github.io/p/nfs-remote-mount/</guid>
      <description>使用NFS (Network File System) 挂载远程文件夹 安装NFS 在服务端和客户端同时安装nfs。
sudo apt install nfs-kernel-serversudo firewall-cmd --permanent --add-service=nfs //开启防火墙放行sudo firewall-cmd --reload //重载防火墙服务端创建共享文件夹并添加配置
mkdir NFS_share //可以自定义名称sudo vim /etc/exports //修改这个文件并写入下面这一行，注意更换左边的绝对路径 和第二个客户端的ip地址/home/yongjian/NFS_share 144.214.24.68(rw,no_root_squash,async) 重新打开 nfs服务
sudo systemctl restart nfs-server.service在客户端配置 mkdir NFS_sharesudo mount -t nfs 144.214.24.92:/home/yongjian/NFS_share /home/yongjian/NFS_share/ //这里ip地址是服务端的ip，即把服务端文件夹挂载到本地NFS_share文件夹。前后都用绝对路径或者编写 /etc/fstab文件实现开机挂载。
144.214.24.92:/home/yongjian/NFS_share/ /home/yongjian/NFS_share nfs defaults 0 1 </description>
    </item>
    
    <item>
      <title>Ftp</title>
      <link>http://yjianzhu.github.io/p/ftp/</link>
      <pubDate>Tue, 05 Oct 2021 21:01:52 +0800</pubDate>
      
      <guid>http://yjianzhu.github.io/p/ftp/</guid>
      <description>协议类型 端口 备注 FTP 21 Windows 资源管理器唯一支持的 FTP 形式；明文传输，安全性差，但是很方便 SFTP 22 使用 sshd 作为守护进程；安全，但是传输效率较为低下 FTPS(Explicit) 21 需要一个证书；客户端先发起一个明文的请求，然后再切换到加密连接进行 FTPS(Implicit) 990 同样需要证书；全程加密连接，服务端会拒绝掉所有尝试不通过加密的请求 常用软件 xftp 学生版xftp只支持ftp和sftp，尝试半天才解决。
winscp FileZilla 目前我使用的客户端
FinalShell 似乎很久没更新了</description>
    </item>
    
    <item>
      <title>MidAutumn</title>
      <link>http://yjianzhu.github.io/p/midautumn/</link>
      <pubDate>Wed, 22 Sep 2021 15:34:05 +0800</pubDate>
      
      <guid>http://yjianzhu.github.io/p/midautumn/</guid>
      <description>八月十五日夜湓亭望月 白居易
昔年八月十五夜，曲江池畔杏园边。
今年八月十五夜，湓浦沙头水馆前。
西北望乡何处是，东南见月几回圆？
临风一叹无人会，今夜清光似往年。
图片1嫦娥 云母屏风烛影深，长河渐落晓星沉。
嫦娥应悔偷灵药，碧海青天夜夜心。</description>
    </item>
    
    <item>
      <title>Hiking on lammaIsland</title>
      <link>http://yjianzhu.github.io/p/hiking-on-lammaisland/</link>
      <pubDate>Mon, 20 Sep 2021 16:15:27 +0800</pubDate>
      
      <guid>http://yjianzhu.github.io/p/hiking-on-lammaisland/</guid>
      <description>图片1图片2图片3图片4图片5图片6图片7map1map2</description>
    </item>
    
    <item>
      <title>Init</title>
      <link>http://yjianzhu.github.io/p/init/</link>
      <pubDate>Thu, 16 Sep 2021 15:43:07 +0800</pubDate>
      
      <guid>http://yjianzhu.github.io/p/init/</guid>
      <description>个人博客记录人生 有趣的灵魂，从不自卑。
渔家傲 天接云涛连晓雾，星河欲转千帆舞。仿佛梦魂归帝所。闻天语，殷勤问我归何处。
我报路长嗟日暮，学诗谩有惊人句。九万里风鹏正举。风休住，蓬舟吹取三山去！</description>
    </item>
    
  </channel>
</rss>
